/* 
 * RIDB API Additional Functions 0.1
 *
 * The Recreation Information Database (RIDB) provides data resources to citizens, offering a single point of access to information about recreational opportunities nationwide. The RIDB represents an authoritative source of information and services for millions of visitors to federal lands, historic sites, museums, and other attractions/resources. This initiative integrates multiple Federal channels and sources about recreation opportunities into a one-stop, searchable database of recreational areas nationwide.
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SearchEntry {
  #[serde(rename = "total")]
  total: i32,
  #[serde(rename = "remaining")]
  remaining: i32,
  #[serde(rename = "show_walkup")]
  show_walkup: bool
}

impl SearchEntry {
  pub fn new(total: i32, remaining: i32, show_walkup: bool) -> SearchEntry {
    SearchEntry {
      total: total,
      remaining: remaining,
      show_walkup: show_walkup
    }
  }

  pub fn set_total(&mut self, total: i32) {
    self.total = total;
  }

  pub fn with_total(mut self, total: i32) -> SearchEntry {
    self.total = total;
    self
  }

  pub fn total(&self) -> &i32 {
    &self.total
  }


  pub fn set_remaining(&mut self, remaining: i32) {
    self.remaining = remaining;
  }

  pub fn with_remaining(mut self, remaining: i32) -> SearchEntry {
    self.remaining = remaining;
    self
  }

  pub fn remaining(&self) -> &i32 {
    &self.remaining
  }


  pub fn set_show_walkup(&mut self, show_walkup: bool) {
    self.show_walkup = show_walkup;
  }

  pub fn with_show_walkup(mut self, show_walkup: bool) -> SearchEntry {
    self.show_walkup = show_walkup;
    self
  }

  pub fn show_walkup(&self) -> &bool {
    &self.show_walkup
  }


}



